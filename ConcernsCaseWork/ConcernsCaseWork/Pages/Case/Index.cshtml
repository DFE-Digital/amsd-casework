@page "/case/{handler?}"
@model ConcernsCaseWork.Pages.Case.IndexPageModel

@{
	ViewData["Title"] = "New Case";
	var nonce = HttpContext.GetNonce();
}

<div class="govuk-width-container">
	
	<partial name="_BannerError"/>
	
	<div class="moj-search govuk-grid-row">
		<div class="govuk-grid-column-two-thirds">

			<h1 class="govuk-heading-m">Create case</h1>

			<div tabindex="-1" role="group" id="errorSummary" class="govuk-error-summary moj-hidden" aria-labelledby="error-summary-title" data-module="error-summary"></div>

			<form role="form" id="search-form" novalidate>
				<div class="govuk-form-group">
					<fieldset class="govuk-fieldset" data-required data-error="Search cannot be blank" aria-required="true">

						<legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
							<h2 class="govuk-fieldset__heading govuk-heading-m">
								Find Trust
							</h2>
						</legend>

						<label class="govuk-hint" for="search" id="outgoing-trust-search-query-hint">
							Search by name, trust reference number or companies house number
						</label>

						<input class="govuk-input form-control" id="search" name="search" type="text" aria-valuetext="" aria-describedby="search-hint search-error" placeholder="Search Trusts">
					</fieldset>
				</div>
				
			</form>

			<div class="ccms-loader govuk-!-display-none"></div>
			<div id="autocomplete-container"></div>
			<ul class="autocomplete__menu autocomplete__menu--inline autocomplete__menu--hidden" id="search__listbox" role="listbox">
				<li class="autocomplete__option autocomplete__option--no-results">No results found.</li>
			</ul>
		</div>

	</div>
	<form role="search" id="trust-form" novalidate>
		<div class="govuk-form-group"></div>
		<button class="govuk-button" data-module="govuk-button">
			Next step
		</button>
	</form>
</div>

<script type="application/javascript" nonce="@nonce">
	$(function () {
		let clearResults = function () {
			$("#trusts-partial-results").empty();
			$("#autocomplete-container").empty();
			$(".autocomplete__menu").addClass("autocomplete__menu--hidden");
		};
		
		$("#search").focusin(function() {
			this.value = "";
		  	clearResults();
		});
		
		try {
			let searchForm = $("#search-form");
			const validator = new MOJFrontend.FormValidator(searchForm[0]);
			validator.addValidator('search', [{
		  		method: function(field) {
                	return field.value.trim().length > 0;
              	},
              	message: 'Search cannot be blank'
            }, {
              	method: function(field) {
                	return (field.value.length > 2);
              	},
              	message: 'Enter search criteria higher than three characters'
            }]);
			
			searchForm.submit(function (event) {
				validator.onSubmit(event);
				if (validator.validate()) {
					event.preventDefault();
					
					clearResults();
					showLoader();
					
					// Ajax Get Trusts
					let searchQuery = $("#search").val();
					$.get("case/TrustsSearchResult", { searchQuery: searchQuery })
					.done(function (trustsPartial) {							
						hideGlobalError();
                        hideLoader();
						
						if (trustsPartial.length === 0)  {
							$(".autocomplete__menu").removeClass("autocomplete__menu--hidden");
						}
						else {
							let autocompleteContainer = document.getElementById("autocomplete-container");
							
							const trustNames = trustsPartial.map(trust => trust.displayName);
							const input = $("#search");
							
							accessibleAutocomplete({
							  element: autocompleteContainer,
							  id: input.attr("id"),
							  name: input.attr("name"),
							  source: trustNames,
							  confirmOnBlur: false,
							  minLength: 3,
							  onConfirm: (selected) => {
								  input.attr("aria-valuetext", trustsPartial.find(item => item.displayName === selected).ukPrn);
								  input.val(selected);
							  }
							});
									
							$(".autocomplete__wrapper #search").hide("slow");
							let autocompleteSearch = $("#autocomplete-container #search");
							autocompleteSearch.val(searchQuery);
						}
						
					}).fail(function() {
						clearResults();
						showGlobalError();
						hideLoader();
					});
				} else {
					clearResults();
					hideGlobalError()
					hideLoader();
				}
			});
			
			// Trust form
			$("#trust-form").submit(function (event) {
				event.preventDefault();
				validator.onSubmit(event);
				
				let trustSelected = $("#search").attr("aria-valuetext");
				
				if (validator.validate() && trustSelected !== "") {
					// Ajax Post Trust
					$.get("case?handler=SelectedTrust", 
						{ trustUkPrn: trustSelected })
					.done(function (result) {
						window.location.replace(result.redirectUrl);
					})
					.fail(function() {
						showGlobalError();
					});
				}
			});
			
       	} catch(err) {
			clearResults();
			showGlobalError();
			hideLoader();
	  	}
    });
</script>

